/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package concurrencediscotec;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Erik
 */
public class Lienzo extends javax.swing.JPanel implements Runnable {

    /**
     * Creates new form Lienzo
     */
    public static ArrayList<Mujer> mujeresArray = new ArrayList<>();
    public static ArrayList<Varon> varonesArray = new ArrayList<>();

    ArrayList<Color> colores;

    public Lienzo() {
        initComponents();
        colores = new ArrayList<>();
        colores.add(Color.BLACK);
        colores.add(Color.BLUE);
        colores.add(Color.YELLOW);
        colores.add(Color.CYAN);
        colores.add(Color.DARK_GRAY);
        colores.add(Color.GREEN);
        colores.add(Color.LIGHT_GRAY);
        colores.add(Color.ORANGE);
        colores.add(Color.RED);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 942, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void paint(Graphics g) {
        /* color del fondo*/
        g.setColor(new Color(246, 236, 236));
        /* tamaño del fondo*/
        g.fillRect(0, 0, getWidth(), getHeight());

        /* DIBUJANDO LOS CARRILES ENTRADA*/
        g.setColor(Color.PINK);
        g.fillRect(100, 100, 400, 10);
        g.fillRect(100, 150, 400, 10);
        g.fillRect(700, 100, 300, 10);
        g.fillRect(700, 150, 300, 10);

        /* DIBUJANDO CARRILES SALIDA */
        g.setColor(Color.BLUE);

        g.fillRect(700, 300, 300, 10);
        g.fillRect(700, 350, 300, 10);

        g.fillRect(100, 300, 400, 10);
        g.fillRect(100, 350, 400, 10);

        /* PINTANDO BAÑO */
        g.setColor(Color.CYAN);
        g.fillRect(500, 50, 200, 10);
        g.fillRect(500, 400, 200, 10);
        g.fillRect(500, 50, 10, 350);
        g.fillRect(700, 50, 10, 360);

        /* pintando componentes */
        g.setColor(colores.get((int) (Math.random() * colores.size())));
        g.fillRect(0, 0, 1000, 10);
        g.fillRect(0, 0, 10, 600);
        g.fillRect(990, 0, 10, 600);
        g.fillRect(0, 590, 1000, 10);

        /* pintando componentes */
        g.setColor(Color.magenta);
        g.fillRect(560, 120, 10, 250);

        /* pintando componentes */
        g.setColor(colores.get((int) (Math.random() * colores.size())));
        g.fillRect(10, 80, 100, 100);

        /* pintando componentes */
        g.setColor(colores.get((int) (Math.random() * colores.size())));
        g.fillRect(10, 280, 100, 100);

        /* dibujando mujeres */
        for (int i = 0; i < mujeresArray.size(); i++) {

            mujeresArray.get(i).setGraphics(g);
            mujeresArray.get(i).getGraphics().setColor(mujeresArray.get(i).getColor());
            g.fillOval(mujeresArray.get(i).getCordenadaX(),
                    mujeresArray.get(i).getCordenadaY(),
                    30, 30);
        }
        /* dibujando varones */
        for (int i = 0; i < varonesArray.size(); i++) {

            varonesArray.get(i).setGraphics(g);
            varonesArray.get(i).getGraphics().setColor(varonesArray.get(i).getColor());
            g.fillOval(varonesArray.get(i).getCordenadaX(),
                    varonesArray.get(i).getCordenadaY(),
                    30, 30);
        }
        // System.out.println("repaint tamaño : "+mujers.size());
    }

    static Semaforo estaLibre = new Semaforo(1);
    static Semaforo chicaDentro = new Semaforo(0);
    static Semaforo consumir = new Semaforo(0);
    static Semaforo mutex = new Semaforo(1);

    static int nro_chicos_banio = 0;
    static int nro_chicas_banio = 0;
    static int nro_chicos_cola = 0;
    /* posicion de la cola, para cuando hacen cola */
    static int posicion_cola_mujeres = 0;
    static int posicion_cola_varones = 30;

     /* consumidor para la salida de los varones */
    @Override
    public void run() {
        int i = 0;
        while (true) {
            try {
                mujeresArray.add(new Mujer(0,
                        this,
                        null,
                        100,
                        110,
                        100,
                        colores.get((int) (Math.random() * colores.size()))
                ));
                varonesArray.add(new Varon(0,
                        this,
                        null,
                        100,
                        310,
                        100,
                        colores.get((int) (Math.random() * colores.size()))
                ));

                /* EFECTO DISCOTECA */
                 /* pintando componentes */
                
                repaint();
                //Consumidor c = new Consumidor();

                //System.out.println("i es : " + i);
                mujeresArray.get(i).start();
                varonesArray.get(i).start();

                //c.start();
                Thread.sleep(5000);
                i++;
            } catch (InterruptedException ex) {
                Logger.getLogger(Lienzo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void iniciarTodo() {
        for (int i = 0; i < mujeresArray.size(); i++) {
            mujeresArray.get(i).start();
        }
    }
}
